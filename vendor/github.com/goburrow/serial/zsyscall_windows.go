// go build mksyscall_windows.go && ./mksyscall_windows syscall_windows.go
// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT

package serial

import "unsafe"
import "syscall"

var (
	modkernel32 = syscall.NewLazyDLL("kernel32.dll")

	procSetCommState    = modkernel32.NewProc("SetCommState")
	procSetCommTimeouts = modkernel32.NewProc("SetCommTimeouts")
)

func SetCommState(handle syscall.Handle, dcb *c_DCB) (err error) {
	r1, _, e1 := syscall.Syscall(procSetCommState.Addr(), 2, uintptr(handle), uintptr(unsafe.Pointer(dcb)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func SetCommTimeouts(handle syscall.Handle, timeouts *c_COMMTIMEOUTS) (err error) {
	r1, _, e1 := syscall.Syscall(procSetCommTimeouts.Addr(), 2, uintptr(handle), uintptr(unsafe.Pointer(timeouts)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}
